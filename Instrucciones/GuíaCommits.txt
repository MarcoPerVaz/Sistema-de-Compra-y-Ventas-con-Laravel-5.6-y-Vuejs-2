
Commit - Creación del proyecto
Commit - Edición de readme.md
<----------Modulo Categoría---------->
Commit - Integrando la plantilla CoreUi
  -Edición de la vista welcome.blade.php
  -Creación y edición de la vista principal.blade.php
  -Edición del archivo en routes/web.php
  -Se agregan los archivos necesarios para el funcionamiento de la vista principal.blade.php
    -En la carpeta public/css se agregan los archivos sacados de la plantilla personalizada de CoreUi
      -font-awesome.min.css 
      -simple-line-icons.min.css
      -style.css
    -En la carpeta public/js se agregan
      -bootstrap.min.js
      -Chart.min.js
      -jquery.min.js
      -pace.min.js
      -popper.min.js
      -template.js
    -Se agregan las carpetas fonts e images sacadas de la plantilla personalizada de CoreUi
  -Creación y edición de la carpeta resources/views/contenido y dentro la vista contenido.blade.php
Commit - Implementando Laravel-Mix
  -Se mueven los archivos de la carpeta public/css/ a la carpeta resources/assets/plantilla/css/
    -font-awesome.min.css 
    -simple-line-icons.min.css
    -style.css
  -Se mueven los archivos de la carpeta public/js/ a la carpeta resources/assets/plantilla/js/
    -bootstrap.min.js
    -Chart.min.js
    -jquery.min.js
    -pace.min.js
    -popper.min.js
    -template.js
  -Edición del archivo webpack.mix.js para compilar los css y js y generarlos en la carpeta public
  -Edición del archivo package.json porque en el curso se usan otras dependencias 
  -Se instalan las dependencias de Javascript con el comando 
    -npm install
  -Compilar archivos con el comando
    -npm run dev o npm run watch
  -Edición de la vista principal.blade.php para agregar los archivos plantilla.css y plantilla.js compilados
Commit - Implementación de Vuejs
  -Edición del archivo resources/assets/js/bootstrap.js
  -Edición del archivo webpack.mix.js
  -Edición de la vista principal.blade.php
  -Edición de la vista contenido/contenido.blade.php
  -Edición del componente resources/assets/js/componets/ExampleComponent.vue
Commit - Menú principal de la plantilla
  -Edición de la vista principal.blade.php
  -Creación y edición de la carpeta resources/views/plantilla y dentro la vista sidebar.blade.php
  -Edición del archivo resources/assets/js/app.js
  -Edición de la vista contenido/contenido.blade.php
  -Comando para compilar
    -npm run dev
Commit - Migraciones con Laravel
  -Creación y edición de la migración create_categorias_table
    -php artisan make:migration create_categorias_table
  -Edición del archivo .env
    DB_DATABASE=sistemacompraventas
    DB_USERNAME=root
    DB_PASSWORD=
  -Crear las migraciones en la BD 
    -php artisan migrate
    Nota: Error: Syntax error or access violation: 1071 Specified key was too long; max key length is 767 bytes
    Solución: 
      -En el archivo app/Providers/AppServiceProvider.php
        -En la función boot() agregar
          -Schema::defaultStringLength(191);
        Nota: Importar el Facade Schema
          -use Illuminate\Support\Facades\Schema;
    -Usar el comando php artisan migrate:fresh por si muestra el error de que la tablas ya existen
Commit - Modelos en Laravel
  -Creación y edición del modelo Categoria
    -php artisan make:model Categoria
Commit - Controladores en Laravel
  -Creación y edición del controlador 
    -php artisan make:controller CategoriaController --resource
    -Edición de la función index, store, update, desactivar
  -Edición del archivo routes/web.php
    -Creación de las rutas para el controlador CategoriaController
      -Route::get('/categoria', 'CategoriaController@index');
      -Route::post('/categoria/registrar', 'CategoriaController@store');
      -Route::put('/categoria/actualizar', 'CategoriaController@update');
      -Route::put('/categoria/desactivar', 'CategoriaController@desactivar');
      -Route::put('/categoria/activar', 'CategoriaController@activar');
Commit - Listado de categorías
  Nota: Todo el contenido del componente resources/assets/js/components/ExampleComponent.vue fue pasado al componente Categoria,
        el componente Categoria solo fue usado como ejemplo
  -Edición de la vista contenido/contenido.blade.php
  -Creación y edición del componente resources/assets/js/components/Categoria.vue
  -Compilar 
    -npm run dev
Commit - Modal para crear categorías
  -Edición del componente components/Categoria.vue
  -Compilar
    -npm run dev
Commit - Registrar categoría
  -Edición del componente components/Categoria.vue
  Error:
    -Edición de la función store y update del controlador CategoriaController
      -Esto: categoria->description = $request->descripcion;
      -Por esto: categoria->descripcion = $request->descripcion;
Commit - Validación de datos - categorías
  -Edición del componente componets/Categoria.vue
Commit - Actualizar categoría
  -Edición del componente components/Categoria.vue
Commit - Eliminar de forma lógica las categorías
  -Implementación de la librería SweetAlert2 versión 7.11.0 
    Nota: Hay versiones posteriores pero se uso la misma que en el curso
    -Se descargó el archivo del sitio web
      -https://cdn.jsdelivr.net/npm/sweetalert2@7.11.0/dist/sweetalert2.all.min.js
      -Sitio para ver los ejemplos
        -https://www.npmjs.com/package/sweetalert2/v/7.11.0 
    -Se guardo en resources/assets/plantilla/js/sweetalert2.all.js
  -Edición del archivo webpack.mix.js
    -Se agrego SweetAlert2 en los scripts
  -Compilar
    -npm run dev
  -Edición del componente components/Categoria.vue
  -Edición del controlador CategoriaController
    -Se arregló un error en el comentario
Commit - Seguridad en las peticiones Http
  -Edición del controlador CategoriaController
    -Se agrega el condicional para aceptar solo peticiones ajax 
      -Función index, store, update, desactivar y activar
Commit - Paginación de registros de categorías
  -Edición del controlador CategoriaController
    -Edición de la función index
  -Edición del componente components/Categoria.vue
    -Creación de 2 funciones computadas
      -isActived
      -pagesNumber
    -Creación del método cambiarPagina()
    -Edición de la función listarCategoria()
Commit - Búsqueda de categorías por nombre o descripción
  -Edición del componente components/Categoria.vue
    -Edición de la función listarCategoria()
    -Edición de la función cambiarPagina()
    -Edición de la función registrarCategoria()
    -Edición de la función actualizarCategoria()
    -Edición de la función desactivarCategoria()
    -Edición de la función activarCategoria()
    -Edición de la propiedad mounted
  -Edición del controlador CategoriaController
    -Edición de la función index
  -Compilar
    -npm run dev
<----------Modulo Artículo---------->
Commit - Migraciones para artículos
  -Creación y edición de la migración create_articulos_table
    -php artisan make:migration create_articulos_table
  -Crear la migración en la BD 
    -php artisan migrate
Commit - Modelo para artículos
  -Creación y edición del modelo Articulo
    -php artisan make:model Articulo
  -Edición del modelo Categoria
Commit - Controlador y rutas para artículos
  -Creación y edición del controlador ArticuloController
    -php artisan make:controller ArticuloController
    -Edición de la función index, store, update, desactivar y activar
  -Creación de las rutas para artículos en routes/web.php
Commit - Listado, paginación y búsqueda de artículos
  -Creación y edición del componente components/Articulo.vue
  -Edición del componente components/Categoria.vue
  -Edición del archivo resources/assets/js/app.js
    -Registro del componente components/Articulo.vue
  -Edición de la vista contenido/contenido.blade.php
  -Compilar
    -npm run dev
Commit - Mostrar categorías para crear artículos
  -Edición controlador CategoriaController
    -Creación de la función selectCategoria
  -Edición del archivo routes/web.php
    -Creacion de la ruta selectCategoria
  -Edición del componente componets/Articulo.vue
  -Compilar
    -nom run dev
Commit - Crear y validar artículos
  -Edición del componente components/Articulo.vue
  -Compilar
    -npm run watch
Commit - Actualizar artículos
  -Edición del componente components/Articulo.vue
Commit - Habilitar y deshabilitar artículos
  -Edición del componente components/Articulo.vue
Commit - Código de barras utilizando Vue-BarCode
  -Se instala Vue-Barcode desde le sitio web
    -https://github.com/lindell/vue-barcode
    -npm install vue-barcode
  -Se importa Vue-Barcode en el componente components/Articulo.vue
    -import VueBarcode from 'vue-barcode';
<----------Modulo Persona---------->
Commit - Migraciones para personas
  -Creación y edición de la migración create_personas_table
    -php artisan make:migration create_personas_table
  -Integrar la nueva migración a la BD
    -php artisan migrate
Commit - Modelo para personas
  -Creación y edición del modelo Persona
    -php artisan make:model Persona
Commit - Controlador y rutas para personas
  -Creación y edición del controlador ClienteController
    -php artisan make:controller ClienteController
    -Edición de la función index, store, update
  -Creación de las rutas para personas en routes/web.php
Commit - Listado, paginación y búsqueda de personas
  -Creación y edición del componente components/Cliente.vue
  -Edición del archivo resources/assets/js/app.js
    -Registro del componente components/Cliente.vue
  -Edición de la vista contenido/contenido.blade.php
  -Compilar
    -npm run dev
Commit - Crear y actualizar personas/clientes
  -Edición de componente components/Cliente.vue
<----------Modulo Proveedor---------->
Commit - Migraciones para proveedores
  -Creación y edición de la migración create_proveedores_table
    -php artisan make:migration create_proveedores_table
  -Crear la migración en la BD 
    -php artisan migrate
Commit - Modelo para proveedores
  -Creación y edición del modelo Proveedor
    -php artisan make:model Proveedor
  -Edición del modelo Persona
Commit - Controlador y rutas para proveedores
  -Creación del controlador ProveedorController
    -php artisan make:controller ProveedorController
    -Edición de la función index, store, update
    Nota: Importar el facade DB
      -use Illuminate\Support\Facades\DB;
      -use App\Proveedor;
      -use App\Persona;
    -En la función store se hace uso de transacciones
  -Creación de las rutas para proveedores en routes/web.php
  Error: Edición del modelo Proveedor
    -Esto: private $timestamps = false;
    -Por esto: public $timestamps = false;
Commit - Listado, paginación y búsqueda de proveedores
  -Creación y edición del componente components/Proveedor.vue
  -Edición del archivo resources/assets/js/app.js
    -Registro del componente components/Proveedor.vue
  -Edición de la vista contenido/contenido.blade.php
  -Compilar
    -npm run dev
Commit - Crear y actualizar proveedores
  -Edición de componente components/Proveedor.vue
<----------Modulo Role---------->
Commit - Migraciones para roles estáticos
  -Creación y edición de la migración create_roles_table
    -php artisan make:migration create_roles_table
  -Crear la migración en la BD 
    -php artisan migrate
Commit - Modelo, controlador y rutas para roles
  -Creación y edición del modelo Rol
    -php artisan make:model Rol
  -Creación y edición del controlador RolController
    -php artisan make:controller RolController
    -Edición de la función index
  -Creación de las rutas para roles en routes/web.php
Commit - Listado, paginación y búsqueda de roles
  -Creación y edición del componente components/Rol.vue
  -Edición del archivo resources/assets/js/app.js
    -Registro del componente components/Rol.vue
  -Edición de la vista contenido/contenido.blade.php
  -Compilar
    -npm run dev
<----------Modulo Usuarios---------->
Commit - Migraciones para usuarios
  Nota: La migración para usuarios ya existe y como depende de la tabla roles y personas, se le cambió el nombre para ajustar el orden
  -Edición de la migración create_users_table
  Nota: Se elimina la tabla users de la BD
  Nota: Se elimina create_users_table de migrations de la BD
  -Se crea la migración
    -php artisan migrate
Commit - Modelo para usuarios
  -Edición del modelo User
  -Edición de modelo Persona
  -Edición de modelo Rol
Commit - Controlador, rutas y encriptar password para usuarios
  -Creación y edición del controlador UserController
    -php artisan make:controller UserController
    -Edición de la función index, store, update, activar y desactivar
    Nota: Importar el modelo User
      -use App\User;
      -use App\Persona;
      -use Illuminate\Support\Facades\DB;
  -Creación de las rutas para users en routes/web.php
  Error: Edición del controlador ProveedorController
    -Edición de la función update
      -Esto: $persona = Persona::findOrfail($request->id);
      -Por esto: $persona = Persona::findOrfail($proveedor->id);
Commit - Listado, paginación y búsqueda de usuarios
  -Creación y edición del componente components/User.vue
  -Edición del archivo resources/assets/js/app.js
    -Registro del componente components/User.vue
  -Edición de la vista contenido/contenido.blade.php
  -Compilar
    -npm run dev
Commit - Mostrando roles para crear usuarios
  -Edición del controlador RolController
    -Creación y edición de la función selectRol()
  -Creación de la ruta rol/selectRol en routes/web.php
  -Edición del componente components/User.vue
Commit - Crear y actualizar usuarios
  -Edición del componente components/User.vue
Commit - Habilitar y deshabilitar usarios
  -Edición del componente components/User.vue
Commit - Arreglando errores del modulo usuarios
  -Edición del componente components/Cliente.vue
<----------Modulo Acceso y autorización de usuarios---------->
Commit - Vistas y rutas para autenticación
  -Creación del scaffolding para la autenticación
    -php artisan make:auth
    Nota: El comando crea lo necesario para implementar un login y registro
    -Eliminación de la carpeta resources/views/auth/passwords
    -Eliminación de la vista resources/views/auth/register.blade.php
    -Creación y edición de la vista auth/contenido.blade.php
    -Edición de la vista auth/login.blade.php
Commit - Controlador para validar acceso al sistema
  -Edición del controlador LoginController
    -Creación de la función showLoginForm()
    Nota: Importar 
      -use Illuminate\Http\Request;
      -use Illuminate\Support\Facades\Auth;
    Nota: Eliminación
      -use Illuminate\Foundation\Auth\AuthenticatesUsers;
  -Edición del archivo routes/web.php
    -Eliminación de las rutas que laravel implementa para el login
    -Creación de la ruta personalizada para el login
    -Edición de la ruta por defecto
      -Esto: '/'
      -Por esto: '/main'
      -Se le asigna un name a la ruta
      Nota: La ruta por defecto ahora será la vista para iniciar sesión
  -Edición de la vista auth/login.blade.php
  -Edición de archivo resources/lang/auth.php
Commit - Middleware, autorización según roles
  -Creación y edición del middleware Administrador
    -php artisan make:middleware Administrador
  -Creación y edición del middleware Almacenero
    -php artisan make:middleware Almacenero
  -Creación y edición del middleware Vendedor
    -php artisan make:middleware Vendedor
  Edición del archivo app/Http/kernel.php
  -Se registran los 3 middlewares, Administrador, Almacenero y Vendedor
  -Edición del archivo routes/web.php
    -Edición de las rutas para agruparlas según el middleware 
      -Se crea el grupo guest que permitirá el acceso si no está registrado
      -Se crea el grupo auth que permitirá el acceso si está registrado
        -Se crea el subgrupo de rutas para el rol Almacenero
        -Se crea el subgrupo de rutas para el rol Vendedor
        -Se crea el subgrupo de rutas para el rol Administrador
  -Edición de la vista principal.blade.php
  -Edición del nombre de la vista plantilla/sidebar.blade.php por plantilla/sidebaradministrador.blade.php
  -Creación y edición de la vista plantilla/sidebarvendedor
  -Creación y edición de la vista plantilla/sidebaralmacenero
  -Edición de la vista contenido/contenido.blade.php
Commit - Logout - cerrar sesión
  -Edición del controlador Auth/LoginController
    -Creación y edición de la función logout
  -Edición del archivo routes/web.php
    -Creación de la ruta logout
  -Edición de la vista principal.blade.php
  -Edición del middleware app/Http/Middleware/RedirectIfAuthenticated.php
    -Se cambia la ruta de redirección de /home a /main
  Error: Edición del archivo routes/web.php
    -El grupo de rutas de auth estaba incorrecto ya que tenía guest en lugar de auth
<----------Modulo Compras---------->
Commit - Migraciones para ingresos
  -Creación y edición  de la migración create_ingresos_table
  -Creación y edición  de la migración create_detalle_ingresos_table
  -Crear las migraciones
    -php artisan migrate
Commit - Modelos para ingresos
  -Creación y edición del modelo Ingreso
  -Creación y edición del modelo DetalleIngreso
Commit - Controlador y rutas para ingresos
  -Creación y edición del controlador IngresoController
    -php artisan make:controller IngresoController
    Nota: Importar el modelo Ingreso
      -use App\Ingreso;
    Nota: Sitio web para obtener la zona horaria
      -https://www.php.net/manual/es/timezones.america.php
  -Creación de las rutas para ingresos en routes/web.php dentro de almacenero, administrador